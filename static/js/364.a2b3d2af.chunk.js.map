{"version":3,"file":"static/js/364.a2b3d2af.chunk.js","mappings":"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","sources":["components/styles/WarningLabel.styled.ts","components/WarningLabel.tsx","texts/errors/formErrors.ts","components/styles/InputField.styled.ts","components/InputField.tsx","components/styles/Button.styled.ts","components/SubmitButton.tsx","components/styles/FormContainer.styled.ts","components/Contact.tsx","pages/Contact/styles/Contact.styled.ts","texts/common/rhdevsInfo.ts","components/styles/ClickToCopySection.styled.ts","components/ClickToCopySection.tsx","pages/Contact/index.tsx"],"sourcesContent":["import styled, { FontType } from 'styled-components'\nimport { fontTypeCss } from '../../styles/index.styled'\n\nexport const Label = styled.span<{ fontType: FontType }>`\n  font-size: 20px;\n  margin-left: 1rem;\n  color: ${(props) => props.theme.palette.primary};\n\n  font-style: normal;\n  ${fontTypeCss}\n`\n","import { useTheme } from 'styled-components'\nimport { WarningOutlined } from '@ant-design/icons'\n\nimport { Label } from './styles/WarningLabel.styled'\n\ntype Props = {\n  label: string\n}\n\nfunction WarningLabel(props: Props) {\n  const theme = useTheme()\n  const { h3 } = { ...theme.typography.fontSize }\n\n  return (\n    <Label fontType={h3}>\n      <WarningOutlined /> {props.label}\n    </Label>\n  )\n}\n\nexport default WarningLabel\n","// Missing input\nexport const missingField = 'Please fill in this field!'\n\n// Invalid input\nexport const invalidName = 'Please enter a valid name!' // numbers and symbols in names are invalid\nexport const invalidEmail = 'Please enter a valid email address!'\n\n// Validation regex\nexport const defaultRegex = /.*/\nexport const requiredRegex = /.+/\nexport const emailRegex = /.+@.+\\..+/i // keep it simple\nexport const nameRegex = /^[A-Za-z,/' -]+$/\n","import styled, { FontType } from 'styled-components'\nimport { fontTypeCss } from '../../styles/index.styled'\n\nexport const InputFieldContainer = styled.div`\n  position: relative;\n  height: 120px;\n  width: 100%;\n`\n\nexport const InputFieldHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 46px;\n  margin: 0;\n`\n\nexport const InputFieldTitle = styled.div<{ fontType: FontType }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 46px;\n  margin: 0;\n\n  font-style: normal;\n  ${fontTypeCss}\n\n  color: ${(props) => props.theme.palette.common.white};\n`\n\nexport const TextInput = styled.input<{ fontType: FontType }>`\n  width: 100%;\n  height: 45px;\n  margin: 0;\n\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid ${(props) => props.theme.palette.common.gray};\n\n  font-style: normal;\n  ${fontTypeCss}\n\n  color: white;\n  background: transparent;\n\n  transition: border-color 0.2s;\n\n  :focus {\n    border-bottom-color: ${(props) => props.theme.palette.common.white};\n  }\n  :invalid {\n    border-bottom-color: ${(props) => props.theme.palette.primary};\n  }\n`\n","import { FieldValues, UseFormRegister } from 'react-hook-form'\nimport { useTheme } from 'styled-components'\nimport WarningLabel from './WarningLabel'\nimport { defaultRegex, invalidEmail, invalidName, missingField } from '../texts/errors/formErrors'\n\nimport { InputFieldContainer, InputFieldHeader, InputFieldTitle, TextInput } from './styles/InputField.styled'\n\ntype Types = 'text' | 'name' | 'email'\n\ntype Props = {\n  type?: Types\n  title: string\n  error: any\n  register: UseFormRegister<FieldValues>\n  pattern?: RegExp\n  required?: boolean\n}\n\nconst defaultProps = {\n  type: 'text',\n  pattern: defaultRegex,\n  required: false,\n}\n\nconst warningLabelTexts: Record<Types, string> = {\n  text: missingField,\n  name: invalidName,\n  email: invalidEmail,\n}\nfunction InputField(props: Props) {\n  const theme = useTheme()\n\n  const { title, error, register, required } = props\n  const type = props.type ?? 'text'\n  const pattern = props.pattern ?? defaultRegex\n\n  const {\n    common: { white },\n    primary,\n  } = { ...theme.palette }\n  const { input, h2 } = { ...theme.typography.fontSize }\n\n  const warningLabelText = warningLabelTexts[`${type}`]\n\n  /* eslint-disable react/jsx-props-no-spreading */\n  /* eslint-disable object-shorthand */\n  return (\n    <InputFieldContainer>\n      <InputFieldHeader>\n        <InputFieldTitle fontType={h2} style={{ color: error ? primary : white }}>\n          {title}\n          <span style={{ paddingLeft: '0.1rem' }}>:</span> {/* fine space between title and colon */}\n        </InputFieldTitle>\n        {error && <WarningLabel label={warningLabelText} />}\n      </InputFieldHeader>\n      <TextInput\n        pattern={pattern.source} // for css side rendering\n        fontType={input}\n        {...register(title, { required: required, pattern: pattern })}\n      />\n    </InputFieldContainer>\n  )\n}\n\nInputField.defaultProps = defaultProps\n\nexport default InputField\n","import styled from 'styled-components'\n\nexport const BaseButton = styled.div<{ fontSize?: string; isActive?: boolean }>`\n  width: fit-content;\n  justify-content: center;\n  align-items: center;\n  .ant-btn-text {\n    color: ${(props) => props.theme.palette.common.white};\n    font-size: ${(props) => props.fontSize};\n    border: 0;\n    border-bottom: transparent 2px solid;\n    background-color: ${(props) => props.theme.palette.common.black};\n    transition: background-image 0.4s ease-in-out;\n    &:hover {\n      cursor: pointer;\n      background-position: 50% 1.2em;\n      background-image: linear-gradient(\n        to bottom,\n        ${(props) => props.theme.palette.common.white},\n        ${(props) => props.theme.palette.common.white}\n      );\n      background-repeat: no-repeat;\n      background-size: calc(100% - 18px) 2px;\n    }}\n    ${(props) => {\n      if (props.isActive) {\n        return `\n        .ant-btn-text {\n          background-position: 50% 1.2em;\n          color: ${props.theme.palette.primary};\n          background-image: linear-gradient(\n            to bottom,\n            ${props.theme.palette.primary},\n            ${props.theme.palette.primary}\n          );\n          background-repeat: no-repeat;\n          background-size: calc(100% - 18px) 2px;\n        }}\n        `\n      }\n      return `\n        color: ${props.theme.palette.primary}\n      `\n    }}\n  }\n`\n","import { Button as AntdButton } from 'antd'\nimport { BaseButton } from './styles/Button.styled'\n\ntype Props = {\n  text: string\n  fontSize?: string\n  isActive?: boolean\n}\n\nconst defaultProps = {\n  fontSize: '20px',\n  isActive: false,\n}\n\nfunction SubmitButton(props: Props) {\n  const { text, fontSize, isActive } = props\n\n  return (\n    <BaseButton fontSize={fontSize} isActive={isActive}>\n      <AntdButton type=\"text\" htmlType=\"submit\">\n        {text}\n      </AntdButton>\n    </BaseButton>\n  )\n}\n\nSubmitButton.defaultProps = defaultProps\n\nexport default SubmitButton\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 29px;\n  Button {\n    margin: 40px;\n  }\n`\n\nexport const TextContainer = styled.div`\n  font-size: 24px;\n  margin: 35px 0px;\n  align-self: flex-start;\n`\n","import axios from 'axios'\nimport { FieldValues, useForm } from 'react-hook-form'\nimport InputField from './InputField'\nimport SubmitButton from './SubmitButton'\nimport { emailRegex, nameRegex } from '../texts/errors/formErrors'\n\nimport { FormContainer } from './styles/FormContainer.styled'\n\nfunction ContactForm() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ mode: 'onChange' })\n\n  const onSubmit = (data: FieldValues) => {\n    axios({\n      url: 'https://formspree.io/f/mvolznvk', // placeholder, replace with ur id here\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n      },\n      data: {\n        name: data.Name.trim().replace(/ {2,}/g, ' '), // trim and remove double spaces\n        email: data.Email.trim(),\n        message: data.Message.trim(),\n      },\n    }).then((response) => {\n      console.log(response)\n    })\n  }\n\n  return (\n    <FormContainer onSubmit={handleSubmit(onSubmit)} noValidate>\n      <InputField type=\"text\" title=\"Name\" error={errors.Name} register={register} pattern={nameRegex} required />\n      <InputField type=\"email\" title=\"Email\" error={errors.Email} register={register} pattern={emailRegex} required />\n      <InputField type=\"text\" title=\"Message\" error={errors.Message} register={register} required />\n      <SubmitButton text=\"Submit\" fontSize=\"30px\" />\n    </FormContainer>\n  )\n}\n\nexport default ContactForm\n","import styled, { FontType } from 'styled-components'\nimport { fontTypeCss } from '../../../styles/index.styled'\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 5% 10%;\n  background: ${(props) => props.theme.palette.common.black};\n  color: ${(props) => props.theme.palette.common.white};\n  gap: 50px;\n`\n\nexport const StaticSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 30px;\n`\n\nexport const InformationSection = styled.div`\n  min-width: 50%;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`\n\nexport const Logo = styled.img`\n  width: 30%;\n  object-fit: contain;\n`\n\nexport const ContactTitle = styled.label<{ fontType: FontType }>`\n  ${fontTypeCss}\n`\n\nexport const SectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`\n\nexport const SectionTitle = styled.p<{ fontType: FontType }>`\n  margin: 0;\n  ${fontTypeCss}\n`\n\nexport const SectionContent = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  a + a {\n    padding: 0 50px;\n  }\n`\n\nexport const ContactLink = styled.a<{ fontType: FontType }>`\n  ${fontTypeCss}\n  color: ${(props) => props.theme.palette.common.gray};\n  text-decoration: none;\n`\n","// Types of contact methods\nexport const contactHeaders: string[] = ['Email', 'Contact Number', 'Address']\n\n// Value of contact methods\nexport const contactMethods: Record<string, string> = {\n  Email: 'raffleshalldevs@gmail.com',\n  'Contact Number': '+65 98220941',\n  Address: '19 Kent Ridge Crescent, Singapore 119278',\n}\n\n// Links to socials\nexport const contactLinks: Record<string, string> = {\n  Instagram: 'https://www.instagram.com/rhdevs',\n  LinkedIn: 'https://www.linkedin.com/company/rhdevs',\n}\n\nexport const socialMedia = {\n  title: 'Social Media',\n  items: ['Instagram', 'LinkedIn'],\n  links: contactLinks,\n}\n\nexport const formFields = ['Name', 'Email', 'Message']\n","import styled, { FontType } from 'styled-components'\nimport { fontTypeCss } from '../../styles/index.styled'\n\nexport const ClickToCopyTitle = styled.p<{ fontType: FontType }>`\n  margin: 0;\n  ${fontTypeCss}\n  color: ${(props) => props.color ?? 'white'};\n`\n\nexport const ClickToCopyLink = styled.a<{ fontType: FontType }>`\n  ${fontTypeCss}\n  color: ${(props) => props.color ?? 'white'};\n  cursor: copy;\n\n  &:active {\n    color: white !important;\n  }\n`\n","import { useTheme } from 'styled-components'\n\nimport { ClickToCopyLink, ClickToCopyTitle } from './styles/ClickToCopySection.styled'\n\nfunction ClickToCopySection({ text, value, title }: { text: string; value?: string; title?: string }) {\n  const theme = useTheme()\n  const { body, h3 } = { ...theme.typography.fontSize }\n\n  return (\n    <>\n      <ClickToCopyTitle color={theme.palette.common.white} fontType={h3}>\n        {title}\n      </ClickToCopyTitle>\n      <ClickToCopyLink\n        onClick={() => navigator.clipboard.writeText(value ?? text) /* set text as value if not explicitly specified */}\n        color={theme.palette.primary}\n        fontType={body}\n      >\n        {text}\n      </ClickToCopyLink>\n    </>\n  )\n}\n\nClickToCopySection.defaultProps = {\n  value: undefined,\n  title: undefined,\n}\n\nexport default ClickToCopySection\n","import { useTheme } from 'styled-components'\nimport ContactForm from '../../components/Contact'\nimport {\n  MainContainer,\n  StaticSection,\n  InformationSection,\n  ContactTitle,\n  SectionContainer,\n  SectionTitle,\n  SectionContent,\n  ContactLink,\n  Logo,\n} from './styles/Contact.styled'\nimport { contactHeaders, contactMethods, socialMedia } from '../../texts/common/rhdevsInfo'\nimport ClickToCopySection from '../../components/ClickToCopySection'\nimport logo from '../../assets/logo.png'\n\nexport default function Contact() {\n  const theme = useTheme()\n  const { body, h1, h3 } = { ...theme.typography.fontSize }\n  return (\n    <MainContainer>\n      <ContactTitle fontType={h1}>Contact Us</ContactTitle>\n      <StaticSection>\n        <InformationSection>\n          {contactHeaders.map((header) => (\n            <SectionContainer>\n              <ClickToCopySection text={contactMethods[header]} title={header} />\n            </SectionContainer>\n          ))}\n          <SectionContainer>\n            <SectionTitle fontType={h3}>{socialMedia.title}</SectionTitle>\n            <SectionContent>\n              {socialMedia.items.map((item) => (\n                <ContactLink fontType={body} href={socialMedia.links[item]} target=\"_blank\">\n                  {item}\n                </ContactLink>\n              ))}\n            </SectionContent>\n          </SectionContainer>\n        </InformationSection>\n        <Logo src={logo} alt=\"logo\" />\n      </StaticSection>\n      <ContactForm />\n    </MainContainer>\n  )\n}\n"],"names":["Label","styled","props","theme","palette","primary","fontTypeCss","useTheme","h3","typography","fontSize","fontType","WarningOutlined","label","defaultRegex","emailRegex","nameRegex","InputFieldContainer","InputFieldHeader","InputFieldTitle","common","white","TextInput","gray","defaultProps","type","pattern","required","warningLabelTexts","text","name","email","InputField","title","error","register","input","h2","warningLabelText","style","color","paddingLeft","source","BaseButton","black","isActive","SubmitButton","htmlType","FormContainer","useForm","mode","handleSubmit","errors","formState","onSubmit","data","axios","url","method","headers","Accept","Name","trim","replace","Email","message","Message","then","response","console","log","noValidate","MainContainer","StaticSection","InformationSection","Logo","ContactTitle","SectionContainer","SectionTitle","SectionContent","ContactLink","contactHeaders","contactMethods","Address","socialMedia","items","links","Instagram","LinkedIn","ClickToCopyTitle","ClickToCopyLink","ClickToCopySection","value","body","onClick","navigator","clipboard","writeText","undefined","Contact","h1","map","header","item","href","target","src","logo","alt"],"sourceRoot":""}